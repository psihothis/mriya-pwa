(function(){
  // –±–ª–æ–∫ –∑—É–º—É (pinch/double-tap) —É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ–π –∞–ø—Ü—ñ
  document.addEventListener('gesturestart', e => e.preventDefault(), { passive:false });
  let lastTouchEnd = 0;
  document.addEventListener('touchend', e => { const now=Date.now(); if (now-lastTouchEnd<=300) e.preventDefault(); lastTouchEnd=now; }, { passive:false });

  const INSTALLED_ONLY = true;
  const IS_STANDALONE = window.matchMedia('(display-mode: standalone)').matches || window.navigator.standalone === true;

  if (INSTALLED_ONLY && !IS_STANDALONE){
    document.getElementById('app').innerHTML = `
      <div class="gate">
        <div class="box">
          <h2>–î–æ–¥–∞–π ¬´–ú—Ä—ñ—é¬ª –Ω–∞ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –µ–∫—Ä–∞–Ω</h2>
          <div class="steps">
            <ol>
              <li>–í—ñ–¥–∫—Ä–∏–π —É Safari</li>
              <li>–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å ‚Üí <b>–î–æ–¥–∞—Ç–∏ –Ω–∞ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –µ–∫—Ä–∞–Ω</b></li>
            </ol>
          </div>
        </div>
      </div>`; 
    return;
  }

  if ('serviceWorker' in navigator && IS_STANDALONE){
    window.addEventListener('load', ()=>navigator.serviceWorker.register('service-worker.js'));
  }

  const icons = {
    home:`<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 10.5L12 4l8 6.5V20a1 1 0 0 1-1 1h-4.5a1 1 0 0 1-1-1v-4.5h-3V20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9.5z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>`,
    id:`<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x="3" y="5" width="18" height="14" rx="2" stroke="white" stroke-width="2"/><circle cx="9" cy="12" r="2.5" stroke="white" stroke-width="2"/><path d="M14 10h5M14 13h5M14 16h3" stroke="white" stroke-width="2" stroke-linecap="round"/></svg>`,
    eye:`<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2 12s3.5-6 10-6 10 6 10 6-3.5 6-10 6S2 12 2 12z" stroke="white" stroke-width="2"/><circle cx="12" cy="12" r="3" stroke="white" stroke-width="2"/></svg>`,
    menu:`<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 7h16M4 12h16M4 17h16" stroke="white" stroke-width="2" stroke-linecap="round"/></svg>`
  };

  let state='learning'; // –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏ –Ω–∞ 'home' –ø—ñ—Å–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
  window.setState = (s)=>{ state=s; render(); };

  function headerBlock(title='–ù–∞–≤—á–∞–Ω–Ω—è'){
    const today = new Date().toLocaleDateString('uk-UA', {day:'2-digit', month:'long', year:'numeric'});
    const weekday = new Date().toLocaleDateString('uk-UA', {weekday:'long'});
    return `<div class="header">
      <div class="greeting">${title}</div>
      <div class="dateRow">
        <div class="dateBtn">‚Äπ</div>
        <div class="dateText">${today}<br><span style="opacity:.85;text-transform:capitalize">${weekday}</span></div>
        <div class="dateBtn">‚Ä∫</div>
      </div>
    </div>`;
  }

  function bottomNav(active){
    return `<div class="navWrap">
      <div class="navShadow"></div>
      <nav class="nav">
        <a class="tab ${active==='home'?'active':''}" onclick="event.preventDefault();setState('home')">${icons.home}<span>–ì–æ–ª–æ–≤–Ω–∞</span></a>
        <a class="tab ${active==='learning'?'active':''}" onclick="event.preventDefault();setState('learning')">${icons.id}<span>–ù–∞–≤—á–∞–Ω–Ω—è</span></a>
        <a class="tab ${active==='media'?'active':''}" onclick="event.preventDefault();setState('media')">${icons.eye}<span>–¶—ñ–∫–∞–≤–µ</span></a>
        <a class="tab ${active==='menu'?'active':''}" onclick="event.preventDefault();setState('menu')">${icons.menu}<span>–ú–µ–Ω—é</span></a>
      </nav>
    </div>`;
  }

  function subnavLearning(){
    const tabs = ['–†–µ–∑—É–ª—å—Ç–∞—Ç–∏','–î–æ–º–∞—à–∫–∏','–†–æ–∑–∫–ª–∞–¥','–ü–æ–∫–∞–∑–Ω–∏–∫–∏','–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞'];
    return `<div class="subnavWrap">
      <div class="subnavBg"></div>
      <div class="subnav">
        ${tabs.map((t,i)=>`<button class="pill ${i===0?'active':''}" onclick="event.preventDefault()">${t}</button>`).join('')}
      </div>
    </div>`;
  }

  function donutSVG(pct){
    const r=30, c=2*Math.PI*r, off=c*(1-pct);
    return `<svg class="donut" viewBox="0 0 80 80">
      <circle cx="40" cy="40" r="${r}" fill="none" stroke="#e8eefc" stroke-width="10"/>
      <circle cx="40" cy="40" r="${r}" fill="none" stroke="#2a64ff" stroke-width="10" stroke-linecap="round"
        stroke-dasharray="${c}" stroke-dashoffset="${off}"/>
      <text x="40" y="46" text-anchor="middle" font-size="18" font-weight="800" fill="#0b1221">${Math.round(pct*100)}%</text>
    </svg>`;
  }

  function dynCards(){
    const list = (title)=>`
      <div class="dynCard dynWhite">
        <h3>${title}</h3>
        <div class="muted">–ù–∞—Ä–∞–∑—ñ –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –æ—Ü—ñ–Ω–æ–∫, —â–æ–± –≤–∏—Ä–∞—Ö—É–≤–∞—Ç–∏ –¥–∏–Ω–∞–º—ñ–∫—É</div>
        <div class="list">
          ${[['–ì—Ä–æ–º–∞–¥—è–Ω—Å—å–∫–∞ –æ—Å–≤—ñ—Ç–∞','11,0'],['–ì–µ–æ–≥—Ä–∞—Ñ—ñ—è','11,0'],['–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞','10,0']].map(([n,val])=>`
          <div class="row">
            <div>
              <div style="font-weight:800;font-size:20px">${n}</div>
              <div class="muted">–°–µ—Ä. –±–∞–ª –∑–∞ —Å–µ–º–µ—Å—Ç—Ä</div>
            </div>
            <div class="grade">${val}</div>
          </div>`).join('')}
        </div>
      </div>`;

    const card1 = `
      <div class="dynCard dynBlue">
        <h3>–ß–∞—Å –¥–æ–º–∞—à–∫–∏ –Ω–∞—Å—Ç–∞–≤</h3>
        <div class="bigRow">
          <div style="font-size:46px">üî•</div>
          <div class="bigNum">0</div>
        </div>
        <div class="muted" style="color:#e9f0ff;font-size:18px">–í—ñ–¥–º—ñ—á–∞–π –≤–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è —ñ <br>—Ä—É—Ö–∞–π—Å—è –¥–æ –≤–ª–∞—Å–Ω–æ–≥–æ —Ä–µ–∫–æ—Ä–¥—É</div>
        <div class="blob"></div>
      </div>`;

    const card2 = list('–ß—É–¥–æ–≤–∞ —Ä–æ–±–æ—Ç–∞');
    const card3 = list('–ó–≤–µ—Ä–Ω–∏ —É–≤–∞–≥—É');

    const card4 = `
      <div class="dynCard dynWhite">
        <h3>–í—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è</h3>
        <div class="muted" style="margin-top:-2px">–ó–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 14 –¥–Ω—ñ–≤</div>
        <div style="display:flex;gap:12px;align-items:center;margin-top:12px">
          ${donutSVG(0.88)}
          <div>
            <div style="font-weight:800;font-size:20px">–í—ñ–¥–≤—ñ–¥–∞–Ω–æ<br>61 –∑ 69 —É—Ä–æ–∫—ñ–≤</div>
          </div>
        </div>
        <div style="margin-top:14px;font-weight:800">–ü—Ä–æ–ø—É—Å–∫–∏</div>
        <div style="display:flex;justify-content:space-between;align-items:center;margin-top:8px">
          <div class="muted">16.09 –í—Ç</div>
          <a href="#" style="color:#1a55ff;font-weight:800;text-decoration:none">8 –∑ 8 —É—Ä–æ–∫—ñ–≤</a>
        </div>
      </div>`;

    return card1 + card2 + card3 + card4;
  }

  function render(){
    const app = document.getElementById('app');
    if (state==='learning'){
      app.innerHTML = `<div class="screen">` + headerBlock('–ù–∞–≤—á–∞–Ω–Ω—è') + subnavLearning() + `
        <div class="section"><h3>–î–∏–Ω–∞–º—ñ–∫–∞</h3></div>
        <div class="section"><div class="hScroll">` + dynCards() + `</div></div>
      ` + bottomNav('learning') + `</div>`;
      return;
    }
    app.innerHTML = `<div class="screen">` + headerBlock('–ì–æ–ª–æ–≤–Ω–∞') + `<div class="bigCard"><h2>–°—å–æ–≥–æ–¥–Ω—ñ –≤–∏—Ö—ñ–¥–Ω–∏–π</h2></div>` + bottomNav('home') + `</div>`;
  }
  render();
})();