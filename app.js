
(function(){
  // block zoom
  document.addEventListener('gesturestart', e => e.preventDefault(), { passive:false });
  let lastTouchEnd = 0;
  document.addEventListener('touchend', e => { const now=Date.now(); if (now-lastTouchEnd<=300) e.preventDefault(); lastTouchEnd=now; }, { passive:false });

  const INSTALLED_ONLY = true;
  const IS_STANDALONE = window.matchMedia('(display-mode: standalone)').matches || window.navigator.standalone === true;
  if (INSTALLED_ONLY && !IS_STANDALONE){
    document.getElementById('app').innerHTML = `<div class="gate"><div class="box"><h2>–î–æ–¥–∞–π ¬´–ú—Ä—ñ—é¬ª –Ω–∞ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –µ–∫—Ä–∞–Ω</h2><ol class="steps"><li>–í—ñ–¥–∫—Ä–∏–π —É Safari</li><li>–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å ‚Üí –î–æ–¥–∞—Ç–∏ –Ω–∞ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –µ–∫—Ä–∞–Ω</li></ol></div></div>`; return;
  }
  if ('serviceWorker' in navigator && IS_STANDALONE){ window.addEventListener('load', ()=>navigator.serviceWorker.register('service-worker.js')); }

  const icons={home:`<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 10.5L12 4l8 6.5V20a1 1 0 0 1-1 1h-4.5a1 1 0 0 1-1-1v-4.5h-3V20a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1v-9.5z" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></svg>`,id:`<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x="3" y="5" width="18" height="14" rx="2" stroke="white" stroke-width="2"/><circle cx="9" cy="12" r="2.5" stroke="white" stroke-width="2"/><path d="M14 10h5M14 13h5M14 16h3" stroke="white" stroke-width="2" stroke-linecap="round"/></svg>`,eye:`<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2 12s3.5-6 10-6 10 6 10 6-3.5 6-10 6S2 12 2 12z" stroke="white" stroke-width="2"/><circle cx="12" cy="12" r="3" stroke="white" stroke-width="2"/></svg>`,menu:`<svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 7h16M4 12h16M4 17h16" stroke="white" stroke-width="2" stroke-linecap="round"/></svg>`};

  let state='home';
  window.setState = (s)=>{ state=s; render(); };

  function headerBlock(name='–Ü–≤–∞–Ω'){
    const today = new Date().toLocaleDateString('uk-UA', {day:'2-digit', month:'long', year:'numeric'});
    const weekday = new Date().toLocaleDateString('uk-UA', {weekday:'long'});
    return `<div class="header">
      <div class="greeting">–ü—Ä–∏–≤—ñ—Ç, ${name}</div>
      <div class="dateRow">
        <div class="dateBtn">‚Äπ</div>
        <div class="dateText">${today}<br><span style="opacity:.85;text-transform:capitalize">${weekday}</span></div>
        <div class="dateBtn">‚Ä∫</div>
      </div>
    </div>`;
  }
  function bottomNav(active){
    return `<div class="navWrap">
      <div class="navShadow"></div>
      <nav class="nav">
        <a class="tab ${active==='home'?'active':''}" onclick="event.preventDefault();setState('home')">${icons.home}<span>–ì–æ–ª–æ–≤–Ω–∞</span></a>
        <a class="tab ${active==='learning'?'active':''}" onclick="event.preventDefault();setState('learning')">${icons.id}<span>–ù–∞–≤—á–∞–Ω–Ω—è</span></a>
        <a class="tab ${active==='media'?'active':''}" onclick="event.preventDefault();setState('media')">${icons.eye}<span>–¶—ñ–∫–∞–≤–µ</span></a>
        <a class="tab ${active==='menu'?'active':''}" onclick="event.preventDefault();setState('menu')">${icons.menu}<span>–ú–µ–Ω—é</span></a>
      </nav>
    </div>`;
  }

  function subnavLearning(){
    const tabs = ['–†–µ–∑—É–ª—å—Ç–∞—Ç–∏','–î–æ–º–∞—à–∫–∏','–†–æ–∑–∫–ª–∞–¥','–ü–æ–∫–∞–∑–Ω–∏–∫–∏','–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞'];
    return `<div class="subnavWrap">
      <div class="subnavBg"></div>
      <div class="subnav">
        ${tabs.map((t,i)=>`<button class="pill ${i===0?'active':''}" onclick="event.preventDefault()">${t}</button>`).join('')}
      </div>
    </div>`;
  }

  function render(){
    const app = document.getElementById('app');
    if (state==='home'){
      app.innerHTML = `<div class="screen">` + headerBlock() + `<div class="bigCard"><h2>–°—å–æ–≥–æ–¥–Ω—ñ –≤–∏—Ö—ñ–¥–Ω–∏–π</h2></div>` + bottomNav('home') + `</div>`;
    }
    if (state==='learning'){
      const dynCards = Array.from({length:6}).map((_,i)=>`
        <div class="dynCard">
          <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:8px">
            <div style="font-weight:800">–î–∏–Ω–∞–º—ñ–∫–∞ ‚Äî —Ç–∏–∂–¥–µ–Ω—å ${i+1}</div>
            <span class="badge">64%</span>
          </div>
          <div style="height:110px;border-radius:12px;background:linear-gradient(180deg,#eaf1ff,#f7faff)"></div>
          <div style="margin-top:10px;color:#5d6b81;font-size:13px">–í–∏–∫–æ–Ω–∞–Ω–æ –∑–∞–≤–¥–∞–Ω—å, —Å–µ—Ä. –±–∞–ª –î–ó, —Ç–æ—â–æ</div>
        </div>`).join('');

      app.innerHTML = `<div class="screen">` + headerBlock() + subnavLearning() + `
        <div class="section"><h3>–û—Å—Ç–∞–Ω–Ω—ñ –æ—Ü—ñ–Ω–∫–∏</h3></div>
        <div class="section"><div class="grid">
          ${['–ì—Ä–æ–º–∞–¥—è–Ω—Å—å–∫–∞ –æ—Å–≤—ñ—Ç–∞','–ì—Ä–æ–º–∞–¥—è–Ω—Å—å–∫–∞ –æ—Å–≤—ñ—Ç–∞'].map((n,i)=>`
          <div class="card"><div class="badge">${i?10:12}</div><p style="margin-top:8px;font-weight:800">${n}</p></div>`).join('')}
        </div></div>

        <div class="section"><h3>–î–∏–Ω–∞–º—ñ–∫–∞</h3></div>
        <div class="section">
          <div class="hScroll">
            ${dynCards}
          </div>
        </div>

        <div class="section"><div class="grid">
          <div class="card"><h4 style="margin:0 0 4px 0">–í—ñ–¥–≤—ñ–¥—É–≤–∞–Ω–Ω—è</h4>
            <p style="color:#5d6b81;margin:0">–ó–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 14 –¥–Ω—ñ–≤</p>
          </div>
          <div class="card"><h4 style="margin:0 0 4px 0">–ß—É–¥–æ–≤–∞ —Ä–æ–±–æ—Ç–∞ üèÜ</h4>
            <ul style="margin-top:4px; padding-left:18px">
              <li>–ì—Ä–æ–º–∞–¥—è–Ω—Å—å–∫–∞ –æ—Å–≤—ñ—Ç–∞ ‚Äî —Å–µ—Ä. –±–∞–ª –∑–∞ —Å–µ–º–µ—Å—Ç—Ä</li>
              <li>–ì–µ–æ–≥—Ä–∞—Ñ—ñ—è ‚Äî —Å–µ—Ä. –±–∞–ª –∑–∞ —Å–µ–º–µ—Å—Ç—Ä</li>
              <li>–Ü–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ ‚Äî —Å–µ—Ä. –±–∞–ª –∑–∞ —Å–µ–º–µ—Å—Ç—Ä</li>
            </ul></div>
        </div></div>
        ` + bottomNav('learning') + `</div>`;
    }
    if (state==='media'){
      const cards = [
        {title:'–†–µ—Ñ–ª–µ–∫—Å—ñ—è —è–∫ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç —Å–∞–º–æ–ø—ñ–∑–Ω–∞–Ω–Ω—è —ñ –∫—Ä–∞...', tag:'—Ä–µ—Ñ–ª–µ–∫—Å—ñ—è', meta:'2:53'},
        {title:'–Ü–Ω–∫–ª—é–∑–∏–≤–Ω—ñ—Å—Ç—å', tag:'–Ü–Ω–∫–ª—é–∑–∏–≤–Ω—ñ—Å—Ç—å', meta:'4 –µ–ø—ñ–∑–æ–¥–∏'},
        {title:'–î—ñ—è –¥–ª—è...', tag:'–î—ñ—è', meta:'1:20'}
      ];
      app.innerHTML = `<div class="screen">` + headerBlock() + `
        <div class="section"><h3>–ö–æ–Ω—Ç–µ–Ω—Ç</h3></div>
        <div class="section"><div class="grid">
          ${cards.map(c=>`
          <div class="card">
            <div class="badge">${c.tag}</div>
            <div style="height:84px;border-radius:12px;background:#e8eefc;margin:8px 0"></div>
            <div style="display:flex;justify-content:space-between;align-items:center">
              <div style="font-weight:800">${c.title}</div>
              <div style="font-size:12px;color:#5d6b81">${c.meta}</div>
            </div>
          </div>`).join('')}
        </div></div>` + bottomNav('media') + `</div>`;
    }
    if (state==='menu'){
      const items = ['–¢–≤–æ—ó –≤—á–∏—Ç–µ–ª—ñ','QR-—Å–∫–∞–Ω–µ—Ä','–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è','–ü—Ä–∏—Å—Ç—Ä–æ—ó','–ü–∏—Ç–∞–Ω–Ω—è —Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ','–ö–æ–º–∞–Ω–¥–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ú—Ä—ñ—ó','–û—Ü—ñ–Ω–∏—Ç–∏ –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫'];
      app.innerHTML = `<div class="screen">` + headerBlock('–Ü–≤–∞–Ω') + `<div class="section" style="padding-bottom:110px">
        ${items.map(label=>`<div class="listItem"><span>${label}</span><span>‚Ä∫</span></div>`).join('')}
        <button class="buttonPrimary" onclick="alert('–í–∏—Ö—ñ–¥ (–¥–µ–º–æ)')">–í–∏–π—Ç–∏</button>
        <div class="small">–í–µ—Ä—Å—ñ—è 1.6.0 (–¥–µ–º–æ)</div>
      </div>` + bottomNav('menu') + `</div>`;
    }
  }
  render();
})(); 
